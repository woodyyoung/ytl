<?xml version="1.0" encoding="UTF-8"?>    
<beans default-lazy-init="true"    
    xmlns="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"    
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"    
    xsi:schemaLocation="    
       http://www.springframework.org/schema/beans     
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd      
       http://www.springframework.org/schema/mvc     
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd  
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
       http://www.springframework.org/schema/context     
       http://www.springframework.org/schema/context/spring-context-3.1.xsd"> 

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">

		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc.druid.initialSize}" />
		<property name="minIdle" value="${jdbc.druid.minIdle}" />
		<property name="maxActive" value="${jdbc.druid.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${jdbc.druid.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.druid.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${jdbc.druid.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="${jdbc.druid.validationQuery}" />
		<property name="testWhileIdle" value="${jdbc.druid.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.druid.testOnBorrow}" />
		<property name="testOnReturn" value="${jdbc.druid.testOnReturn}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${jdbc.druid.filters}" />
		<!-- <property name="proxyFilters"> <list> <ref bean="stat-filter"/> <ref 
			bean="wall-filter"/> <ref bean="log-filter"/> </list> </property> -->
	</bean>


	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<constructor-arg index="1" value="BATCH" />
	</bean>

	<!-- 创建SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/lty/rt/*/mapper/mapping/*Mapper.xml" />
		<property name="typeAliasesPackage" value="com.lty.rt.*" />
		<property name="configLocation" value="classpath:/spring/mybatis-config.xml"/>
	</bean>

	<!-- 自动扫描映射器,接口mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lty.rt.*" />
	</bean>
	

</beans>